name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          echo "BOT_TOKEN=${{ vars.BOT_TOKEN }}" >> .env
          echo "FIREWORKS_API_KEY=${{ vars.FIREWORKS_API_KEY }}" >> .env

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ vars.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/telegram_llm_streaming:latest

      - name: Log out from DockerHub
        run: docker logout
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: logging
        run: |
          echo ${{ vars.SERVER_HOST }}
      - name: SSH into server and pull image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          password: ${{ vars.SSH_PASSWORD }}
          script: |
            current_container=$(docker ps --filter "ancestor=${{ vars.DOCKERHUB_USERNAME }}/telegram_llm_streaming:latest" --format "{{.Names}}")
            if [ -n "$current_container" ]; then
              docker stop $current_container
              docker rm $current_container
            fi
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/telegram_llm_streaming:latest
            docker stop current_container_name || true
            docker rm current_container_name || true
            docker run -d --name current_container_name -p 80:80 ${{ vars.DOCKERHUB_USERNAME }}/telegram_llm_streaming:latest
